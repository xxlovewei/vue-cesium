(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{"3YsV":function(t,s,e){t.exports=e("8X2Y")},"8X2Y":function(t,s,e){"use strict";e.r(s);var a=e("eVuF"),r=e.n(a),n={data:function(){return{appearance:null,geometry:null,attributes:null,vertexFormat:null,positions:[{lng:107,lat:40,height:1e5},{lng:97,lat:40,height:1e5},{lng:97,lat:37,height:1e5},{lng:107,lat:37,height:1e5},{lng:107,lat:40,height:1e5}],positionsOutline:[{lng:115,lat:30,height:2e5},{lng:90,lat:30,height:2e5}]}},mounted:function(){r.a.all([this.$refs.wall.createPromise,this.$refs.wallOutline.createPromise]).then((function(t){console.log("All geometries are loaded.");var s=t.reduce((function(t,s){var e=s.cesiumObject.constructor.createGeometry(s.cesiumObject),a=s.vm.$parent.modelMatrix?Cesium.BoundingSphere.transform(e.boundingSphere,s.vm.$parent.modelMatrix):e.boundingSphere;return null===t?a:Cesium.BoundingSphere.union(t,a)}),null);t[0].viewer.scene.camera.flyToBoundingSphere(s)}))},methods:{ready:function(t){var s=t.Cesium,e=t.viewer;this.viewer=e;var a=s.PerInstanceColorAppearance,r=s.ColorGeometryInstanceAttribute;this.appearance=new a({flat:!0}),this.vertexFormat=a.FLAT_VERTEX_FORMAT,this.attributes={color:new r(Math.random(),Math.random(),Math.random(),.5)}},LEFT_CLICK:function(t){var s=this.viewer.scene.pick(t.position);console.log(s)}}},l=e("JFUb"),v=Object(l.a)(n,(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("section",[e("h1",[t._v("WallGeometry, WallOutlineGeometry")]),t._v(" "),t._m(0),t._v(" "),e("h2",[t._v("Example")]),t._v(" "),e("h3",[t._v("Load WallGeometry")]),t._v(" "),e("h4",[t._v("Preview")]),t._v(" "),e("doc-preview",[[e("div",{staticClass:"viewer"},[e("vc-viewer",{on:{ready:t.ready,LEFT_CLICK:t.LEFT_CLICK}},[e("vc-primitive",{attrs:{appearance:t.appearance}},[e("vc-instance-geometry",{attrs:{geometry:t.geometry,attributes:t.attributes},on:{"update:geometry":function(s){t.geometry=s}}},[e("vc-geometry-wall",{ref:"wall",attrs:{positions:t.positions,vertexFormat:t.vertexFormat}})],1)],1),t._v(" "),e("vc-primitive",{attrs:{appearance:t.appearance}},[e("vc-instance-geometry",{attrs:{attributes:t.attributes}},[e("vc-geometry-outline-wall",{ref:"wallOutline",attrs:{positions:t.positionsOutline}})],1)],1)],1)],1)]],2),t._v(" "),e("h4",[t._v("Code")]),t._v(" "),t._m(1),t._v(" "),e("h2",[t._v("Instance Properties")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),e("hr"),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("hr"),t._v(" "),t._m(6),t._v(" "),e("h2",[t._v("Events")]),t._v(" "),t._m(7),t._v(" "),e("hr")],1)}),[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("The "),e("code",{pre:!0},[t._v("vc-geometry-wall")]),t._v(" component is used to load a geometry that describes a wall, which is similar to a KML line string. A wall is defined by a series of points, which extrude down to the ground. Optionally, they can extrude downwards to a specified height.")]),t._v(" "),e("li",[t._v("The "),e("code",{pre:!0},[t._v("vc-geometry-outline-wall")]),t._v(" component is used to load a geometry that describes a wall outline. A wall is defined by a series of points, which extrude down to the ground. Optionally, they can extrude downwards to a specified height.")]),t._v(" "),e("li",[t._v("It needs to be used as a sub-component of "),e("code",{pre:!0},[t._v("vc-instance-geometry")]),t._v(", can be mounted on "),e("code",{pre:!0},[t._v("vc-primitive")]),t._v(".")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("template")]),t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("class")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"viewer"')]),t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-viewer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("@ready")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"ready"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("@LEFT_CLICK")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"LEFT_CLICK"')]),t._v(">")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-primitive")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":appearance")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"appearance"')]),t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-instance-geometry")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":geometry.sync")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"geometry"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":attributes")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"attributes"')]),t._v(">")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-geometry-wall")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("ref")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"wall"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":positions")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"positions"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":vertexFormat")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"vertexFormat"')]),t._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-geometry-wall")]),t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-instance-geometry")]),t._v(">")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-primitive")]),t._v(">")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-primitive")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":appearance")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"appearance"')]),t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-instance-geometry")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":attributes")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"attributes"')]),t._v(">")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-geometry-outline-wall")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("ref")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"wallOutline"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v(":positions")]),t._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v('"positionsOutline"')]),t._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-geometry-outline-wall")]),t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-instance-geometry")]),t._v(">")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-primitive")]),t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("vc-viewer")]),t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("div")]),t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("template")]),t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("script")]),t._v(">")]),e("span",{pre:!0,attrs:{class:"javascript"}},[t._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("default")]),t._v(" {\n    data() {\n      "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("return")]),t._v(" {\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("appearance")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(",\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("geometry")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(",\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("attributes")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(",\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("vertexFormat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(",\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("positions")]),t._v(": [\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("107.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("40.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("100000.0")]),t._v(" },\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("97.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("40.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("100000.0")]),t._v(" },\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("97.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("37.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("100000.0")]),t._v(" },\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("107.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("37.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("100000.0")]),t._v(" },\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("107.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("40.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("100000.0")]),t._v(" }\n        ],\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("positionsOutline")]),t._v(": [\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("115.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("30.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("200000.0")]),t._v(" },\n          { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lng")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("90.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("lat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("30.0")]),t._v(", "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("height")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("200000.0")]),t._v(" }\n        ]\n      }\n    },\n    mounted() {\n      "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("Promise")]),t._v(".all(["),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".$refs.wall.createPromise, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".$refs.wallOutline.createPromise]).then("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[t._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[t._v("instances")]),t._v(") =>")]),t._v(" {\n        "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("console")]),t._v(".log("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'All geometries are loaded.'")]),t._v(")\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" boundingSphereUnion = instances.reduce("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[t._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[t._v("prev, cur")]),t._v(") =>")]),t._v(" {\n          "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" geometry = cur.cesiumObject.constructor.createGeometry(cur.cesiumObject)\n          "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" boundingSphere = cur.vm.$parent.modelMatrix\n            ? Cesium.BoundingSphere.transform(geometry.boundingSphere, cur.vm.$parent.modelMatrix)\n            : geometry.boundingSphere\n          "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("return")]),t._v(" prev === "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(" ? boundingSphere : Cesium.BoundingSphere.union(prev, boundingSphere)\n        }, "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("null")]),t._v(")\n        instances["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("0")]),t._v("].viewer.scene.camera.flyToBoundingSphere(boundingSphereUnion)\n      })\n    },\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("methods")]),t._v(": {\n      ready({ Cesium, viewer }) {\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".viewer = viewer\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" { PerInstanceColorAppearance, ColorGeometryInstanceAttribute } = Cesium\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".appearance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("new")]),t._v(" PerInstanceColorAppearance({\n          "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("flat")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("true")]),t._v("\n        })\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".vertexFormat = PerInstanceColorAppearance.FLAT_VERTEX_FORMAT\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".attributes = {\n          "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("color")]),t._v(": "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("new")]),t._v(" ColorGeometryInstanceAttribute("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("Math")]),t._v(".random(), "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("Math")]),t._v(".random(), "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("Math")]),t._v(".random(), "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[t._v("0.5")]),t._v(")\n        }\n      },\n      LEFT_CLICK(movement) {\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" feature = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("this")]),t._v(".viewer.scene.pick(movement.position)\n        "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[t._v("console")]),t._v(".log(feature)\n      }\n    }\n  }\n")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[t._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[t._v("script")]),t._v(">")]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",[s("code",{pre:!0},[this._v("vc-geometry-wall")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("type")]),t._v(" "),e("th",[t._v("default")]),t._v(" "),e("th",[t._v("description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("positions")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("required")]),t._v(" An array of Cartesian objects, which are the points of the wall. "),e("strong",[t._v("structure: [{ lng: number, lat: number, height: number },...,{ lng: number, lat: number, height: number }]")])])]),t._v(" "),e("tr",[e("td",[t._v("granularity")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.")])]),t._v(" "),e("tr",[e("td",[t._v("maximumHeights")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" An array parallel to positions that give the maximum height of the wall at positions. If undefined, the height of each position in used.")])]),t._v(" "),e("tr",[e("td",[t._v("minimumHeights")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v("An array parallel to positions that give the minimum height of the wall at positions. If undefined, the height at each position is 0.0.")])]),t._v(" "),e("tr",[e("td",[t._v("ellipsoid")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The ellipsoid for coordinate manipulation.")])]),t._v(" "),e("tr",[e("td",[t._v("vertexFormat")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The vertex attributes to be computed.")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",[s("code",{pre:!0},[this._v("vc-geometry-outline-wall")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("type")]),t._v(" "),e("th",[t._v("default")]),t._v(" "),e("th",[t._v("description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("positions")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("required")]),t._v(" An array of Cartesian objects, which are the points of the wall. "),e("strong",[t._v("structure: [{ lng: number, lat: number, height: number },...,{ lng: number, lat: number, height: number }]")])])]),t._v(" "),e("tr",[e("td",[t._v("granularity")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.")])]),t._v(" "),e("tr",[e("td",[t._v("maximumHeights")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" An array parallel to positions that give the maximum height of the wall at positions. If undefined, the height of each position in used.")])]),t._v(" "),e("tr",[e("td",[t._v("minimumHeights")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v("An array parallel to positions that give the minimum height of the wall at positions. If undefined, the height at each position is 0.0.")])]),t._v(" "),e("tr",[e("td",[t._v("ellipsoid")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The ellipsoid for coordinate manipulation.")])]),t._v(" "),e("tr",[e("td",[t._v("vertexFormat")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td"),t._v(" "),e("td",[e("code",{pre:!0},[t._v("optional")]),t._v(" The vertex attributes to be computed.")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Refer to the official document: "),s("strong",[s("a",{attrs:{href:"https://cesium.com/docs/cesiumjs-ref-doc/WallGeometry.html"}},[this._v("WallGeometry")])]),this._v(", "),s("strong",[s("a",{attrs:{href:"https://cesium.com/docs/cesiumjs-ref-doc/WallOutlineGeometry.html"}},[this._v("WallOutlineGeometry")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("parameter")]),t._v(" "),e("th",[t._v("description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("ready")]),t._v(" "),e("td",[t._v("{Cesium, viewer, cesiumObject}")]),t._v(" "),e("td",[t._v("Triggers when the component is ready. It returns a core class of Cesium, a viewer instance, and the cesiumObject.")])])])])}],!1,null,null,null);s.default=v.exports}}]);
//# sourceMappingURL=65.cf2608e6e77cef1ad405.js.map