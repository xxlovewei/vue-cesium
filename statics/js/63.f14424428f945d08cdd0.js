(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{"76Nc":function(e,t,s){"use strict";s.r(t);var a=s("eVuF"),r=s.n(a),n={data:function(){return{appearance:null,appearanceOutline:null,vertexFormat:null,rectangle:{west:110.5,south:29.5,east:115.5,north:34.5},rectangleOutline:{west:100.5,south:29.5,east:105.5,north:34.5},attributes:null}},mounted:function(){r.a.all([this.$refs.rectangle.createPromise,this.$refs.rectangleOutline.createPromise]).then((function(e){console.log("All geometries are loaded.");var t=e.reduce((function(e,t){var s=t.cesiumObject.constructor.createGeometry(t.cesiumObject),a=t.vm.$parent.modelMatrix?Cesium.BoundingSphere.transform(s.boundingSphere,t.vm.$parent.modelMatrix):s.boundingSphere;return null===e?a:Cesium.BoundingSphere.union(e,a)}),null);e[0].viewer.scene.camera.flyToBoundingSphere(t)}))},methods:{ready:function(e){var t=e.Cesium,s=(e.viewer,t.MaterialAppearance),a=t.Material,r=t.Cartesian2,n=t.PerInstanceColorAppearance,v=t.ColorGeometryInstanceAttribute;this.vertexFormat=s.vertexFormat,this.appearance=new s({material:a.fromType("Checkerboard",{repeat:new r(20,6)}),materialSupport:s.MaterialSupport.TEXTURED}),this.appearanceOutline=new n({flat:!0}),this.attributes={color:v.fromColor(t.Color.RED.withAlpha(.5))}}}},v=s("JFUb"),l=Object(v.a)(n,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("section",[s("h1",[e._v("RectangleGeometry, RectangleOutlineGeometry")]),e._v(" "),e._m(0),e._v(" "),s("h2",[e._v("Example")]),e._v(" "),s("h3",[e._v("Load RectangleGeometry")]),e._v(" "),s("h4",[e._v("preview")]),e._v(" "),s("doc-preview",[[s("div",{staticClass:"viewer"},[s("vc-viewer",{on:{ready:e.ready}},[s("vc-primitive",{attrs:{appearance:e.appearance}},[s("vc-instance-geometry",[s("vc-geometry-rectangle",{ref:"rectangle",attrs:{rectangle:e.rectangle,vertexFormat:e.vertexFormat}})],1)],1),e._v(" "),s("vc-primitive",{attrs:{appearance:e.appearanceOutline}},[s("vc-instance-geometry",{attrs:{attributes:e.attributes}},[s("vc-geometry-outline-rectangle",{ref:"rectangleOutline",attrs:{rectangle:e.rectangleOutline}})],1)],1)],1)],1)]],2),e._v(" "),s("h4",[e._v("Code")]),e._v(" "),e._m(1),e._v(" "),s("h2",[e._v("Instance Properties")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),s("hr"),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),s("hr"),e._v(" "),e._m(6),e._v(" "),s("h2",[e._v("Events")]),e._v(" "),e._m(7),e._v(" "),s("hr")],1)}),[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("The "),s("code",{pre:!0},[e._v("vc-geometry-rectangle")]),e._v(" component is used to load a geometry that describes a cartographic rectangle on an ellipsoid centered at the origin.")]),e._v(" "),s("li",[e._v("The "),s("code",{pre:!0},[e._v("vc-geometry-outline-rectangle")]),e._v(" component is used to load a geometry that describes the outline of a a cartographic rectangle on an ellipsoid centered at the origin.")]),e._v(" "),s("li",[e._v("It needs to be used as a sub-component of "),s("code",{pre:!0},[e._v("vc-instance-geometry")]),e._v(", can be mounted on "),s("code",{pre:!0},[e._v("vc-primitive")]),e._v(" or "),s("code",{pre:!0},[e._v("vc-primitive-ground")]),e._v(".")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("template")]),e._v(">")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("div")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("class")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"viewer"')]),e._v(">")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-viewer")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("@ready")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"ready"')]),e._v(">")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-primitive")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":appearance")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"appearance"')]),e._v(">")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-instance-geometry")]),e._v(">")]),e._v("\n          "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-geometry-rectangle")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("ref")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"rectangle"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":rectangle")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"rectangle"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":vertexFormat")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"vertexFormat"')]),e._v(">")]),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-geometry-rectangle")]),e._v(">")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-instance-geometry")]),e._v(">")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-primitive")]),e._v(">")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-primitive")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":appearance")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"appearanceOutline"')]),e._v(">")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-instance-geometry")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":attributes")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"attributes"')]),e._v(">")]),e._v("\n          "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-geometry-outline-rectangle")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("ref")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"rectangleOutline"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v(":rectangle")]),e._v("="),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"rectangleOutline"')]),e._v(">")]),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-geometry-outline-rectangle")]),e._v(">")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-instance-geometry")]),e._v(">")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-primitive")]),e._v(">")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("vc-viewer")]),e._v(">")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("div")]),e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("template")]),e._v(">")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("<"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("script")]),e._v(">")]),s("span",{pre:!0,attrs:{class:"javascript"}},[e._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("default")]),e._v(" {\n    data() {\n      "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("return")]),e._v(" {\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("appearance")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("appearanceOutline")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("vertexFormat")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v(",\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("rectangle")]),e._v(": { "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("west")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("110.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("south")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("29.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("east")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("115.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("north")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("34.5")]),e._v(" },\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("rectangleOutline")]),e._v(": { "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("west")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("100.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("south")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("29.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("east")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("105.5")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("north")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("34.5")]),e._v(" },\n        "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("attributes")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v("\n      }\n    },\n    mounted() {\n      "),s("span",{pre:!0,attrs:{class:"hljs-built_in"}},[e._v("Promise")]),e._v(".all(["),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".$refs.rectangle.createPromise, "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".$refs.rectangleOutline.createPromise]).then("),s("span",{pre:!0,attrs:{class:"hljs-function"}},[e._v("("),s("span",{pre:!0,attrs:{class:"hljs-params"}},[e._v("instances")]),e._v(") =>")]),e._v(" {\n        "),s("span",{pre:!0,attrs:{class:"hljs-built_in"}},[e._v("console")]),e._v(".log("),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'All geometries are loaded.'")]),e._v(")\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("const")]),e._v(" boundingSphereUnion = instances.reduce("),s("span",{pre:!0,attrs:{class:"hljs-function"}},[e._v("("),s("span",{pre:!0,attrs:{class:"hljs-params"}},[e._v("prev, cur")]),e._v(") =>")]),e._v(" {\n          "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("const")]),e._v(" geometry = cur.cesiumObject.constructor.createGeometry(cur.cesiumObject)\n          "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("const")]),e._v(" boundingSphere = cur.vm.$parent.modelMatrix\n            ? Cesium.BoundingSphere.transform(geometry.boundingSphere, cur.vm.$parent.modelMatrix)\n            : geometry.boundingSphere\n          "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("return")]),e._v(" prev === "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v(" ? boundingSphere : Cesium.BoundingSphere.union(prev, boundingSphere)\n        }, "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("null")]),e._v(")\n        instances["),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("0")]),e._v("].viewer.scene.camera.flyToBoundingSphere(boundingSphereUnion)\n      })\n    },\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("methods")]),e._v(": {\n      ready({ Cesium, viewer }) {\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("const")]),e._v(" { MaterialAppearance, Material, Cartesian2, PerInstanceColorAppearance, ColorGeometryInstanceAttribute } = Cesium\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".vertexFormat = MaterialAppearance.vertexFormat\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".appearance = "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("new")]),e._v(" MaterialAppearance({\n          "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("material")]),e._v(": Material.fromType("),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v("'Checkerboard'")]),e._v(", {\n            "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("repeat")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("new")]),e._v(" Cartesian2("),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("20.0")]),e._v(", "),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("6.0")]),e._v(")\n          }),\n          "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("materialSupport")]),e._v(": MaterialAppearance.MaterialSupport.TEXTURED\n        })\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".appearanceOutline = "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("new")]),e._v(" PerInstanceColorAppearance({\n          "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("flat")]),e._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[e._v("true")]),e._v("\n        })\n        "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("this")]),e._v(".attributes = {\n          "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[e._v("color")]),e._v(": ColorGeometryInstanceAttribute.fromColor(Cesium.Color.RED.withAlpha("),s("span",{pre:!0,attrs:{class:"hljs-number"}},[e._v("0.5")]),e._v("))\n        }\n      }\n    }\n  }\n")]),s("span",{pre:!0,attrs:{class:"hljs-tag"}},[e._v("</"),s("span",{pre:!0,attrs:{class:"hljs-name"}},[e._v("script")]),e._v(">")]),e._v("\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",[t("code",{pre:!0},[this._v("vc-geometry-rectangle")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("table",[s("thead",[s("tr",[s("th",[e._v("name")]),e._v(" "),s("th",[e._v("type")]),e._v(" "),s("th",[e._v("default")]),e._v(" "),s("th",[e._v("description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("rectangle")]),e._v(" "),s("td",[e._v("Object")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("required")]),e._v(" A cartographic rectangle with north, south, east and west properties in radians. "),s("strong",[e._v("structure: { west: number, south: number, east: number, north: number }")])])]),e._v(" "),s("tr",[s("td",[e._v("vertexFormat")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The vertex attributes to be computed.")])]),e._v(" "),s("tr",[s("td",[e._v("ellipsoid")]),e._v(" "),s("td",[e._v("Object")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The ellipsoid on which the rectangle lies.")])]),e._v(" "),s("tr",[s("td",[e._v("granularity")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.")])]),e._v(" "),s("tr",[s("td",[e._v("height")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("0")])]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance in meters between the rectangle and the ellipsoid surface.")])]),e._v(" "),s("tr",[s("td",[e._v("rotation")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("0.0")])]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The rotation of the rectangle, in radians. A positive rotation is counter-clockwise.")])]),e._v(" "),s("tr",[s("td",[e._v("stRotation")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("0.0")])]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.")])]),e._v(" "),s("tr",[s("td",[e._v("extrudedHeight")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance in meters between the rectangle's extruded face and the ellipsoid surface.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",[t("code",{pre:!0},[this._v("vc-geometry-outline-rectangle")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("table",[s("thead",[s("tr",[s("th",[e._v("name")]),e._v(" "),s("th",[e._v("type")]),e._v(" "),s("th",[e._v("default")]),e._v(" "),s("th",[e._v("description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("rectangle")]),e._v(" "),s("td",[e._v("Object")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("required")]),e._v(" A cartographic rectangle with north, south, east and west properties in radians. "),s("strong",[e._v("structure: { west: number, south: number, east: number, north: number }")])])]),e._v(" "),s("tr",[s("td",[e._v("ellipsoid")]),e._v(" "),s("td",[e._v("Object")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The ellipsoid on which the rectangle lies.")])]),e._v(" "),s("tr",[s("td",[e._v("granularity")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.")])]),e._v(" "),s("tr",[s("td",[e._v("height")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("0")])]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance in meters between the rectangle and the ellipsoid surface.")])]),e._v(" "),s("tr",[s("td",[e._v("rotation")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("0.0")])]),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The rotation of the rectangle, in radians. A positive rotation is counter-clockwise.")])]),e._v(" "),s("tr",[s("td",[e._v("extrudedHeight")]),e._v(" "),s("td",[e._v("Number")]),e._v(" "),s("td"),e._v(" "),s("td",[s("code",{pre:!0},[e._v("optional")]),e._v(" The distance in meters between the rectangle's extruded face and the ellipsoid surface.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Refer to the official document: "),t("strong",[t("a",{attrs:{href:"https://cesium.com/docs/cesiumjs-ref-doc/RectangleGeometry.html"}},[this._v("RectangleGeometry")])]),this._v(", "),t("strong",[t("a",{attrs:{href:"https://cesium.com/docs/cesiumjs-ref-doc/RectangleOutlineGeometry.html"}},[this._v("RectangleOutlineGeometry")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("table",[s("thead",[s("tr",[s("th",[e._v("name")]),e._v(" "),s("th",[e._v("parameter")]),e._v(" "),s("th",[e._v("description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("ready")]),e._v(" "),s("td",[e._v("{Cesium, viewer, cesiumObject}")]),e._v(" "),s("td",[e._v("Triggers when the component is ready. It returns a core class of Cesium, a viewer instance, and the cesiumObject.")])])])])}],!1,null,null,null);t.default=l.exports},dOcf:function(e,t,s){e.exports=s("76Nc")}}]);
//# sourceMappingURL=63.f14424428f945d08cdd0.js.map